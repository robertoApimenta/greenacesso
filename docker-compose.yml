version: "3"

services:
  node:
    build: .
    user: node
    container_name: api
    tty: true
    stdin_open: true
    command: bash
    restart: always
    working_dir: /app
    volumes:
      - ./:/app
    depends_on:
      - db
    ports:
      - 3001:3001
    environment:
      MYSQL_USER: root
      MYSQL_PASSWORD: password
      MYSQL_HOST: db # Nome do service logo abaixo
      API_HOST: 'node'
      API_PORT: 3001
      NODE_ENV: 'development'
    networks:
      - api_net

  # Serviço que irá rodar o banco de dados
  db:
    container_name: green_db
    image: mysql
    platform: linux/x86_64
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: password
    networks:
      - api_net

# Lista de redes que os containeres irão utilizar
networks:
  # Cria rede com nome `blogs_api_net`
  api_net:
    # Define o `driver` como `bridge`, que é o driver padrão do docker
    driver: bridge

# As chaves `tty`, `stdin_open` e `command` fazem com que o container fique
# rodando em segundo plano, bem como tornam possível o uso do comando
# `docker attach`, já deixando o terminal atual acoplado ao container, direto
# no bash. Apesar disso, utilizar o attach mais de uma vez irá replicar o
# terminal, portanto é melhor utilizar o comando `docker exec`.